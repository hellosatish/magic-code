 {{#pathContext}}
package {{configPackage}};
{{/pathContext}}
{{#renderSwagger}}
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.service.Contact;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2;


@EnableSwagger2
@Configuration
public class SwaggerAPIDocumentationConfig {

	ApiInfo apiInfo() {
		return new ApiInfoBuilder().title("{{projectName}}")
				.description(
						"This is a {{projectName}} application. ")
				.license("Apache 2.0").licenseUrl("http://www.apache.org/licenses/LICENSE-2.0.html")
				.termsOfServiceUrl("").version("1.0.0").contact(new Contact("", "", "mailtosatishsharma@gmial.com")).build();
	}

	@Bean
	public Docket configureControllerPackageAndConvertors() {
		return new Docket(DocumentationType.SWAGGER_2).select()
				.apis(RequestHandlerSelectors.basePackage("{{basePackageName}}")).build()
				 .directModelSubstitute(org.joda.time.LocalDate.class, java.sql.Date.class)
	                .directModelSubstitute(org.joda.time.DateTime.class, java.util.Date.class)
	                .apiInfo(apiInfo());
	}

}
{{/renderSwagger}}
{{#renderMetrics}}
{{#metrics}}
{{#prometheus}}
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import io.micrometer.core.instrument.binder.system.ProcessorMetrics;


/**
 * 
 * @author Magic-Code
 * All the metrics are registered from this class
 */
@Configuration
public class MonitoringConfiguration {
	/**
	 * 
	 * Register ProcessorMetrics
	 */
	@Bean
	public ProcessorMetrics processorMetrics(){
		return new ProcessorMetrics();
	}
}
{{/prometheus}}
{{/metrics}}
{{/renderMetrics}}
